type Mutation {
  addParticipant(input: AddParticipantInput!): Participant!
}

type Conversation {
  participants(limit: Int, nextToken: String): ParticipantConnection!
}

type User {
  participation(limit: Int, nextToken: String): ParticipantConnection!
}

type Subscription {
  addedParticipant(input: AddedParticipantSubscriptionInput!): Participant!
    @aws_subscribe(mutations: ["addParticipant"])
}

"""
Conversation Participant
"""
type Participant
  @entity(
    additionalFields: [
      { path: "pk", type: "string" }
      { path: "sk", type: "string" }
      { path: "conversationID", type: "string" }
      { path: "userID", type: "string" }
      { path: "appID", type: "string" }
      { path: "appConversation", type: "string" }
    ]
  ) {
  # We have to put something in here for codegen to work (this is also in conversation.graphql)
  conversation: Conversation!
}

type ParticipantConnection implements Nodes {
  items: [Participant!]!
  nextToken: String
}

input AddParticipantInput {
  conversationID: ID!
  appID: ID!
  userID: ID!
}

input AddedParticipantSubscriptionInput {
  userID: ID!
}
