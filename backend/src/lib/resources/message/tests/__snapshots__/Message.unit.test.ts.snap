// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates resources matching the snapshot 1`] = `
Object {
  "Resources": Object {
    "apiC8550315": Object {
      "Properties": Object {
        "AuthenticationType": "API_KEY",
        "Name": "test",
      },
      "Type": "AWS::AppSync::GraphQLApi",
    },
    "apiDefaultApiKey6AB8D7C4": Object {
      "DependsOn": Array [
        "apiSchema0EA92056",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "apiC8550315",
            "ApiId",
          ],
        },
      },
      "Type": "AWS::AppSync::ApiKey",
    },
    "apiSchema0EA92056": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "apiC8550315",
            "ApiId",
          ],
        },
        "Definition": "",
      },
      "Type": "AWS::AppSync::GraphQLSchema",
    },
    "apimessageTableDataSource2B33EDE9": Object {
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "apiC8550315",
            "ApiId",
          ],
        },
        "DynamoDBConfig": Object {
          "AwsRegion": Object {
            "Ref": "AWS::Region",
          },
          "TableName": Object {
            "Ref": "messageTable32BEE1EE",
          },
        },
        "Name": "messageTableDataSource",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "apimessageTableDataSourceServiceRole1DB3C03F",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "apimessageTableDataSourceConversationmessagesResolverCA8264F1": Object {
      "DependsOn": Array [
        "apimessageTableDataSource2B33EDE9",
        "apiSchema0EA92056",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "apiC8550315",
            "ApiId",
          ],
        },
        "DataSourceName": "messageTableDataSource",
        "FieldName": "messages",
        "Kind": "UNIT",
        "RequestMappingTemplate": "{
    \\"version\\" : \\"2017-02-28\\",
    \\"operation\\" : \\"Query\\",
    #if($util.isNullOrEmpty($ctx.args.nextToken) == false)
        \\"nextToken\\" : \\"$ctx.args.nextToken\\",
    #end
    #if($util.isNullOrEmpty($ctx.args.limit) == false)
        \\"limit\\" : $ctx.args.limit,
    #end
    \\"expression\\": \\"#pk = :pk\\",
    \\"expressionAttributeNames\\": {
        \\"#pk\\": \\"pk\\"
    },
    \\"expressionAttributeValues\\": {
        \\":pk\\": \\"APP#$ctx.source.appID#USER#$ctx.source.id\\"
    },
    \\"scanIndexForward\\": false
}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "TypeName": "Conversation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "apimessageTableDataSourceMutationaddMessageResolver27CC0A84": Object {
      "DependsOn": Array [
        "apimessageTableDataSource2B33EDE9",
        "apiSchema0EA92056",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Fn::GetAtt": Array [
            "apiC8550315",
            "ApiId",
          ],
        },
        "DataSourceName": "messageTableDataSource",
        "FieldName": "addMessage",
        "Kind": "UNIT",
        "RequestMappingTemplate": "#set($input = $context.args.input)
#set($uuid = $util.autoId())
#set($shortUUID = $uuid.substring(8))
#set($id = \\"$util.time.nowEpochSeconds()$shortUUID\\")
#set($input.created = $util.time.nowEpochSeconds())

{
    \\"version\\": \\"2017-02-28\\",
    \\"operation\\": \\"PutItem\\",
    \\"key\\" : {
        \\"pk\\": $util.dynamodb.toDynamoDBJson(\\"APP#$ctx.args.input.appID#CONV#$ctx.args.input.conversationID\\"),
        \\"id\\": $util.dynamodb.toDynamoDBJson($id)
    },
    \\"attributeValues\\": $util.dynamodb.toMapValuesJson($input)
}",
        "ResponseMappingTemplate": "$util.toJson($ctx.result)",
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "apimessageTableDataSourceServiceRole1DB3C03F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "apimessageTableDataSourceServiceRoleDefaultPolicy8E13E678": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "messageTable32BEE1EE",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "apimessageTableDataSourceServiceRoleDefaultPolicy8E13E678",
        "Roles": Array [
          Object {
            "Ref": "apimessageTableDataSourceServiceRole1DB3C03F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "messageTable32BEE1EE": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "id",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_IMAGE",
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "modifyParticipantAlarmEB0527FE": Object {
      "Properties": Object {
        "AlarmDescription": "A participant updated time could not be modified.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": Array [
          Object {
            "Name": "QueueName",
            "Value": Object {
              "Fn::GetAtt": Array [
                "modifyParticipantUpdatedTimeDLQ707E8105",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "NumberOfMessagesSent",
        "Namespace": "AWS/SQS",
        "Period": 3600,
        "Statistic": "Sum",
        "Threshold": 1,
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "modifyParticipantUpdatedTimeCFC0F0F6": Object {
      "DependsOn": Array [
        "modifyParticipantUpdatedTimeServiceRoleDefaultPolicy0C93EF4D",
        "modifyParticipantUpdatedTimeServiceRole0FA8D18A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-lambda-nodejs-mock-fake-bucket",
          "S3Key": "cdk-lambda-nodejs-mock-fake-lambda.ts",
        },
        "Description": "Updates the \\"UPDATED\\" time for participants, when a new message is added to a conversation.",
        "Environment": Object {
          "Variables": Object {
            "PARTICIPANT_TABLE_NAME": Object {
              "Ref": "participantTableAB77BAF2",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "modifyParticipantUpdatedTimeServiceRole0FA8D18A",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "modifyParticipantUpdatedTimeDLQ707E8105": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "MessageRetentionPeriod": 1209600,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "modifyParticipantUpdatedTimeDynamoDBEventSourcemessageTable4273B03C": Object {
      "Properties": Object {
        "BatchSize": 10,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": Object {
          "OnFailure": Object {
            "Destination": Object {
              "Fn::GetAtt": Array [
                "modifyParticipantUpdatedTimeDLQ707E8105",
                "Arn",
              ],
            },
          },
        },
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "messageTable32BEE1EE",
            "StreamArn",
          ],
        },
        "FunctionName": Object {
          "Ref": "modifyParticipantUpdatedTimeCFC0F0F6",
        },
        "MaximumRetryAttempts": 10,
        "StartingPosition": "LATEST",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "modifyParticipantUpdatedTimeServiceRole0FA8D18A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "modifyParticipantUpdatedTimeServiceRoleDefaultPolicy0C93EF4D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "messageTable32BEE1EE",
                  "StreamArn",
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "participantTableAB77BAF2",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "modifyParticipantUpdatedTimeDLQ707E8105",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "modifyParticipantUpdatedTimeServiceRoleDefaultPolicy0C93EF4D",
        "Roles": Array [
          Object {
            "Ref": "modifyParticipantUpdatedTimeServiceRole0FA8D18A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "participantTableAB77BAF2": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
  },
}
`;
